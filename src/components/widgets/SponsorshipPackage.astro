---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';

interface Props {
  heading: string;
  id?: string;
  price: number;
  benefits: string[];
}

const { heading, id, price, benefits } = Astro.props;
---

<section
  id={id}
  class="flex flex-col justify-between rounded-2xl group relative border border-pycon-purple h-60 lg:h-80 overflow-clip"
>
  <div class="px-8 py-4">
    <header class="mb-6">
      <h2 class="font-semibold text-3xl inline-block text-transparent bg-clip-text" {...id ? { id } : {}}>{heading}</h2>
      <h4 class="font-semibold text-xl text-pycon-purple">â‚±{price.toLocaleString()}</h4>
    </header>
    <div>
      <!-- Content -->
      <h3 class="font-medium text-xl mb-2">Benefits:</h3>
      <span class="flex flex-col gap-2">
        {
          benefits.map((benefit) => (
            <span class="flex gap-2 items-start leading-6">
              <Icon name="check" class="flex-shrink-0 w-6 h-6" />
              <p>{benefit}</p>
            </span>
          ))
        }
      </span>
    </div>
  </div>

  <div class="closed-card-footer w-full rounded-b-2xl flex justify-end items-end py-4 px-8">
    <Button variant="secondary" type="button" class="h-fit font-bold py-2">Read more</Button>
  </div>
</section>

<style>
  #silver h2 {
    background-image: linear-gradient(to bottom, #c2c2c2, #5c5c5c);
  }
  #gold h2 {
    background-image: linear-gradient(to bottom, #fef85d, #989438);
  }
  #platinum h2 {
    background-image: linear-gradient(to bottom, #ffffff, #5c5c5c);
  }
  .closed-card-footer {
    background: linear-gradient(180deg, rgba(73, 7, 148, 0) 0%, rgba(73, 7, 148, 0.55) 32.5%, #490794 65%, #490794 87%);
    @apply absolute bottom-0 h-[50%] z-[5];
  }

  .expanded-card-footer {
    @apply h-auto;
  }
</style>

<script is:inline define:vars={{ id }}>
  const setupExpandableSection = () => {
    const section = document.querySelector(`section#${id}`);

    if (!section) return;

    const button = section.querySelector('button');

    if (!button) return;

    button.addEventListener('click', () => {
      section.classList.toggle('!h-auto');
      section.classList.toggle('expanded');
      button.parentElement.classList.toggle('closed-card-footer');
      button.parentElement.classList.toggle('expanded-card-footer');
      if (button.parentElement.classList.contains('expanded-card-footer')) {
        button.textContent = 'Read less';
      } else {
        button.textContent = 'Read more';
      }
    });
  };

  document.addEventListener('astro:page-load', setupExpandableSection, { once: true });
  document.addEventListener('astro:after-swap', setupExpandableSection);
</script>
